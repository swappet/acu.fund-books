(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{362:function(t,o,i){"use strict";i.r(o);var v=i(42),a=Object(v.a)({},(function(){var t=this,o=t.$createElement,i=t._self._c||o;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",[t._v("基于 Gitbook 制作 Github pages 上的Markdown电子书")]),t._v(" "),i("p",[t._v("GitBook 是一个使用 GitHub/Git 和 Markdown 来制作电子书的命令行工具 (Node.js 库)。Gitbook是一个命令行工，可以把Markdown文件汇集成电子书，并提供PDF等多种格式输出。")]),t._v(" "),i("p",[t._v("把Gitbook生成的HTML发布出来，就形成了一个简单的静态网站。 网站 http://gitbook.com 可以帮助用户更好的使用 Gitbook。同时 http://gitbook.com 还提供了一个桌面编辑器，帮助用户编辑电子书。")]),t._v(" "),i("p",[t._v("Gitbook 与 http://gitbook.com 的关系类似 Git 和 GitHub，一个是工具，另一个是基于工具创建的网站。")]),t._v(" "),i("p",[t._v("涉及如下知识点：\nMarkdown 书写\nGit 使用\nGitbook 基本操作\nGithub pages")]),t._v(" "),i("h1",{attrs:{id:"创建工作目录"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建工作目录"}},[t._v("#")]),t._v(" 创建工作目录")]),t._v(" "),i("p",[t._v("$ cd Code\n$ mkdir mygitbook\n$ cd mygitbook\n文件夹 mygitbook 作为工作目录，之后所有的操作都在这个目录下执行。")]),t._v(" "),i("h1",{attrs:{id:"gitbook-安装"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gitbook-安装"}},[t._v("#")]),t._v(" Gitbook 安装")]),t._v(" "),i("p",[t._v("Gitbook 的安装和准备大概需要几分钟。")]),t._v(" "),i("p",[t._v("目前有两种方式可以而让你使用 Gitbook 来编辑、发布和管理电子书：")]),t._v(" "),i("ol",[i("li",[t._v("本地编辑，然后发布到类似 GitHub pages 的第三方平台；")]),t._v(" "),i("li",[t._v("直接使用已有的 http://gitbook.com 网站。")])]),t._v(" "),i("h2",{attrs:{id:"本地安装"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#本地安装"}},[t._v("#")]),t._v(" 本地安装")]),t._v(" "),i("p",[t._v("本地安装 Gitbook 需要 NodeJS 支持：\nsudo npm install -g gitbook-cli\nsudo npm install -g gitbook\n安装完之后，检验下是否安装成功：gitbook -V")]),t._v(" "),i("h1",{attrs:{id:"编辑书籍"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#编辑书籍"}},[t._v("#")]),t._v(" 编辑书籍")]),t._v(" "),i("p",[t._v("安装好 Gitbook 之后，就可以创建图书了。")]),t._v(" "),i("p",[t._v("Gitbook 的基本用法非常简单，基本上就只有两步:")]),t._v(" "),i("p",[t._v("使用 gitbook init 初始化书籍目录\n使用 gitbook serve 编译书籍\n首先，进入一个目录，例如之前创建好的 gitbook，执行初始化命令：")]),t._v(" "),i("p",[t._v("sudo gitbook init\n然后的 gitbook 空目录会多出两个文件：")]),t._v(" "),i("p",[t._v("mygitbook/\n├── README.md\n└── SUMMARY.md\nREADME.md 和 SUMMARY.md 是两个必须文件，README.md 是对书籍的简单介绍。SUMMARY.md 是书籍的目录结构。")]),t._v(" "),i("p",[t._v("REAMDE.md:")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("# Introduction\n")])])]),i("p",[t._v("SUMMARY.md:")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("# Summary\n\n* [Introduction](README.md)\n")])])]),i("p",[t._v("编辑这两个文件之后，再次执行：")]),t._v(" "),i("p",[t._v("gitbook init\n它会为创建 SUMMARY.md 中的目录结构。")]),t._v(" "),i("p",[t._v("书籍目录结构创建完成以后，就可以使用 gitbook serve 来编译和预览书籍了：")]),t._v(" "),i("p",[t._v("sudo gitbook serve")]),t._v(" "),i("p",[t._v("gitbook serve 命令实际上会首先调用 gitbook build 编译书籍，完成以后会打开一个 web 服务器，监听在本地的 4000 端口。")]),t._v(" "),i("p",[t._v("现在，可以用浏览器打开 http://localhost:4000 查看书籍的效果：")]),t._v(" "),i("p",[t._v("现在，Gitbook 为创建了书籍目录结构后，就可以向其中添加真正的内容了，文件的编写使用 Markdown 语法，在文件修改过程中，每一次保存文件，gitbook serve 都会自动重新编译，所以可以持续通过浏览器来查看最新的书籍效果！")]),t._v(" "),i("h1",{attrs:{id:"发布到-github"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#发布到-github"}},[t._v("#")]),t._v(" 发布到 GitHub")]),t._v(" "),i("p",[t._v("可以在 GitHub 上创建一个仓库，来管理书籍源码。")]),t._v(" "),i("p",[t._v("之前在 http://gitbook.com 新建了一本电子书，并且把电子书的源码存放在了 GitHub 上。现在，可以将 http://gitbook.com 上的这本电子书与 GitHub 的远程仓库关联起来，可以通过向书籍的 GitHub 仓库提交内容来更新书籍。")])])}),[],!1,null,null,null);o.default=a.exports}}]);