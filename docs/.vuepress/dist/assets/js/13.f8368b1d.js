(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{365:function(n,e,t){"use strict";t.r(e);var r=t(42),s=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",[n._v("docker安装nginx 负载均衡配置")]),n._v(" "),t("p",[n._v("一个云主机上部署多个网站，对应不同的目录和域名。")]),n._v(" "),t("p",[n._v("可以用 docker 运行 nginx，作为负载均衡或反向代理。")]),n._v(" "),t("h1",{attrs:{id:"运行一个nginx镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行一个nginx镜像"}},[n._v("#")]),n._v(" 运行一个nginx镜像")]),n._v(" "),t("p",[t("code",[n._v("$ sudo docker run --name nginxproxy -p 8888:80 -d nginx")])]),n._v(" "),t("h1",{attrs:{id:"从启动的nginx镜像中-复制nginx配置文件到本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从启动的nginx镜像中-复制nginx配置文件到本地"}},[n._v("#")]),n._v(" 从启动的nginx镜像中,复制nginx配置文件到本地")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ sudo mkdir /nginxproxy\n$ cd /nginxproxy\n$ sudo mkdir -p conf  html  logs\n$ sudo docker cp nginxproxy:/etc/nginx/nginx.conf /nginxproxy/conf\n")])])]),t("h1",{attrs:{id:"制作两个模拟的nginx网站"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作两个模拟的nginx网站"}},[n._v("#")]),n._v(" 制作两个模拟的nginx网站")]),n._v(" "),t("h2",{attrs:{id:"nginx01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx01"}},[n._v("#")]),n._v(" nginx01")]),n._v(" "),t("p",[n._v("从启动的nginx中复制配置文件到本地:")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ sudo mkdir /nginx01\n$ cd /nginx01\n$ sudo mkdir -p conf  html  logs\n$ sudo docker cp nginxproxy:/etc/nginx/nginx.conf /nginx01/conf\n")])])]),t("p",[n._v("在 /nginx01/conf/nginx.conf 中添加 nginx01 网站的配置："),t("code",[n._v("vi conf/nginx.conf")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    include /etc/nginx/conf.d/*.conf;\n\n    server {\n        listen 8081;\n        root /usr/share/nginx/html;\n        index index.html index.htm;\n    }\n")])])]),t("p",[n._v("增加 nginx01 网站首页："),t("code",[n._v("echo '8081 port nginx' > /nginx01/html/index.html")])]),n._v(" "),t("p",[n._v("然后启动 nginx01 网站的docker：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ sudo docker run -d -p 8081:8081 --name nginx01 \\\n  -v /nginx01/html:/usr/share/nginx/html \\\n  -v /nginx01/conf/nginx.conf:/etc/nginx/nginx.conf \\\n  -v /nginx01/logs:/var/log/nginx nginx\n")])])]),t("p",[n._v("浏览器访问：http://ip:8081")]),n._v(" "),t("h2",{attrs:{id:"nginx02"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx02"}},[n._v("#")]),n._v(" nginx02")]),n._v(" "),t("p",[n._v("类似 nginx01 方式，制作  nginx02 网站('8081'的地方，改为'8082'):")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ cp -rf /nginx01 /nginx02\n$ echo '8082 port nginx' > /nginx02/html/index.html\n$ vi /nginx02/conf/nginx.conf\n")])])]),t("p",[n._v("然后启动 nginx02 网站的docker：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ sudo docker run -d -p 8082:8082 --name nginx02 \\\n  -v /nginx02/html:/usr/share/nginx/html \\\n  -v /nginx02/conf/nginx.conf:/etc/nginx/nginx.conf \\\n  -v /nginx02/logs:/var/log/nginx nginx\n")])])]),t("p",[n._v("浏览器访问：http://ip:8082")]),n._v(" "),t("h1",{attrs:{id:"负载均衡-反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡-反向代理"}},[n._v("#")]),n._v(" 负载均衡/反向代理")]),n._v(" "),t("p",[n._v("删除之前运行的镜像：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ docker ps -a\n115460b1e2e2  nginx nginxproxy 0.0.0.0:8888->80/tcp\n$ docker rm -f  115460b1e2e2\n")])])]),t("p",[n._v("修改nginx反向代理配置："),t("code",[n._v("vi /nginxproxy/conf/nginx.conf")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("http {\n    include /etc/nginx/conf.d/*.conf;\n\n    server { \n        listen       80;\n        server_name  w1.test.com; \n        location / { \n            proxy_pass http://w1; \n            proxy_set_header   Host    $host; \n            proxy_set_header   X-Real-IP   $remote_addr; \n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; \n        } \n    } \n    server { \n        listen       80;\n        server_name  w2.test.com; \n        location / { \n            proxy_pass http://w2; \n            proxy_set_header   Host    $host; \n            proxy_set_header   X-Real-IP   $remote_addr; \n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; \n        } \n    } \n    server { \n        listen       80; \n        server_name  wn.test.com; \n        location /w1 { \n            proxy_pass http://w1/; \n        } \n        location /w2 { \n            proxy_pass http://w2/; \n        } \n    }   \n    server {  \n        listen       80;\n        server_name  wx.test.com;\n        location / {  \n            proxy_pass http://wx;  \n            proxy_redirect default;  \n        } \n    }\n    upstream w1{\n        server wn.test.com:8081;\n    }\n    upstream w2{\n        server wn.test.com:8082;\n    }\n    upstream wx{\n        server wx.test.com:8081 weight=5;\n        server wx.test.com:8082 weight=5;\n    } \n")])])]),t("p",[n._v("/nginxproxy/conf/conf.d/steemconnect.conf")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("server {\n  listen       80;\n  server_name  steemconnect.huaren.news;\n  return 301 https://$server_name$request_uri;\n}\nserver { \n  listen 443 ssl;\n  server_name  steemconnect.huaren.news;\n  ssl on;\n  ssl_certificate  /etc/letsencrypt/live/huaren.news/fullchain.pem;\n  ssl_certificate_key  /etc/letsencrypt/live/huaren.news/privkey.pem;\n  location / { \n    proxy_pass http://steemconnect.huaren.news:8180;\n    proxy_set_header   Host    $host;\n    proxy_set_header   X-Real-IP   $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n  }\n}\n")])])]),t("p",[n._v("挂载本地目录启动nginx：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("$ sudo docker run  -itd \\\n  --name nginxproxy \\\n  --restart always \\\n  -p 80:80 \\\n  -p 443:443 \\\n  -v /nginxproxy/html:/usr/share/nginx/html \\\n  -v /nginxproxy/conf/nginx.conf:/etc/nginx/nginx.conf \\\n  -v /nginxproxy/conf/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw \\\n  -v /nginxproxy/logs:/var/log/nginx:rw \\\n  -v /etc/letsencrypt:/etc/letsencrypt:rw \\\n  -d nginx\n")])])]),t("p",[n._v("server {\nlisten       80;\nlisten 443 ssl;\nserver_name  steemconnect.huaren.news;\n#ssl on;\nssl_certificate  /etc/letsencrypt/live/huaren.news/fullchain.pem;\nssl_certificate_key  /etc/letsencrypt/live/huaren.news/privkey.pem;\nif ( $schema == http){\n#return 301 https://$server_name$request_uri;\nreturn 301 https://$host$request_uri;\n}\nlocation / {\nproxy_pass http://steemconnect.huaren.news:8180;\nproxy_set_header   Host    $host;\nproxy_set_header   X-Real-IP   $remote_addr;\nproxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n}\n}\nserver {\nlisten       80;\nlisten 443 ssl;\nserver_name  steemconnect.huaren.news;\nssl_certificate  /etc/letsencrypt/live/huaren.news/fullchain.pem;\nssl_certificate_key  /etc/letsencrypt/live/huaren.news/privkey.pem;\nlocation / {\nproxy_pass http://steemconnect.huaren.news:8180;\nproxy_set_header   Host    $host;\nproxy_set_header   X-Real-IP   $remote_addr;\nproxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n}\n}")]),n._v(" "),t("h1",{attrs:{id:"访问网站"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问网站"}},[n._v("#")]),n._v(" 访问网站")]),n._v(" "),t("p",[n._v("访问nginx01：http://w1.test.com 或 http://wn.test.com/w1/\n访问nginx02：http://w2.test.com 或 http://wn.test.com/w2/\n随机访问：http://wx.test.com")])])}),[],!1,null,null,null);e.default=s.exports}}]);