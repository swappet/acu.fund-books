(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{364:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://www.vuepress.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VuePress"),a("OutboundLink")],1),t._v(" 由两部分组成：第一部分是一个"),a("a",{attrs:{href:"https://github.com/vuejs/vuepress/tree/master/packages/%40vuepress/core",target:"_blank",rel:"noopener noreferrer"}},[t._v("极简静态网站生成器 (opens new window)"),a("OutboundLink")],1),t._v("，它包含由 Vue 驱动的"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/",target:"_blank",rel:"noopener noreferrer"}},[t._v("主题系统"),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:"https://www.vuepress.cn/plugin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("插件 API"),a("OutboundLink")],1),t._v("，另一个部分是为书写技术文档而优化的"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/default-theme-config.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认主题"),a("OutboundLink")],1),t._v("，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。")]),t._v(" "),a("p",[t._v("每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。")]),t._v(" "),a("p",[t._v("在构建时，VuePress 会为应用创建一个服务端渲染（SSR）的版本，然后通过虚拟访问每一条路径来渲染对应的HTML。")]),t._v(" "),a("p",[t._v("VuePress 有很多优点：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("更好的兼容、扩展 Markdown 语法\n响应式布局，PC端、手机端\nGoogle Analytics 集成\n支持 PWA/SSR \n")])])]),a("h1",{attrs:{id:"简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单使用"}},[t._v("#")]),t._v(" 简单使用")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cd ~\n$ mkdir myvuepress\n$ cd myvuepress\n$ npx npm init\n$ npx npm i --save vuepress\n$ npx npm run dev\n")])])]),a("p",[t._v("全局安装："),a("code",[t._v("$ yarn global add vuepress")]),t._v(" 或 "),a("code",[t._v("$ npx npm install -g vuepress")])]),t._v(" "),a("p",[t._v("如果部署到githua pages，最好本地安装。")]),t._v(" "),a("h2",{attrs:{id:"创建文件夹和文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建文件夹和文件"}},[t._v("#")]),t._v(" 创建文件夹和文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("myvuepress \n├── deploy.sh \n├─── docs\n│   ├── README.md\n│   └── .vuepress\n│       ├── public\n│       └── config.js\n│   └── git-manual\n│       ├── README.md\n│       ├── gitbook.md\n│       └── vuepress.md\n└── package.json\n")])])]),a("p",[t._v("docs/.vuepress/public: 静态资源目录。\ndocs/.vuepress/config.js: 配置文件的入口文件，也可以是 YML 或 toml。")]),t._v(" "),a("p",[t._v("目录结构：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("文件的相对路径")]),t._v(" "),a("th",[t._v("页面路由地址）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("/docs/README.md")]),t._v(" "),a("td",[t._v("/")])]),t._v(" "),a("tr",[a("td",[t._v("/git-manual/README.md")]),t._v(" "),a("td",[t._v("/git-manual/")])]),t._v(" "),a("tr",[a("td",[t._v("/git-manual/vuepress.md")]),t._v(" "),a("td",[t._v("/git-manual/vuepress.html")])])])]),t._v(" "),a("h3",{attrs:{id:"config-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-js"}},[t._v("#")]),t._v(" config.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("module.exports = {\n  title: 'ACU.fund books',\n  description: 'blockchain and open source book of ACU.Fund with vuepress and github.io base on WTFPL.',\n  serviceWorker: true, // 是否开启 PWA\n  head: [ // 注入到当前页面的 HTML <head> 中的标签\n    ['link', { rel: 'icon', href: 'logo.png' }], // 增加一个自定义的 favicon(网页标签的图标)\n    ['link', { rel: 'manifest', href: 'logo.png' }],\n    ['link', { rel: 'apple-touch-icon', href: 'logo.png' }],\n    ['meta', { 'http-quiv': 'pragma', cotent: 'no-cache'}],\n    ['meta', { 'http-quiv': 'pragma', cotent: 'no-cache,must-revalidate'}],\n    ['meta', { 'http-quiv': 'expires', cotent: '0'}]\n  ],\n  serviceWorker: true, // 是否开启 PWA\n  base: '/acu.fund-books/', // 这是部署到github相关的配置\n  markdown: {\n    lineNumbers: false // 代码块显示行号\n  },\n  themeConfig: {\n    nav:[ // 导航栏配置\n      {text: 'git手册', link: 'git-manual/' },\n      {text: '参考', link: '/refers/'},\n      {text: '官网', link: 'https://acu.fund'}      \n    ],\n    sidebar: [ // 侧边栏配置\n      {\n        'git-manual/': [\n            {\n              title: 'git手册',\n              children: [\n                'git-manual/gitbook.html',\n                'git-manual/vuepress.html'\n              ]\n            }\n          ] \n      },\n      // '/',\n      // '/git-manual/',\n      // ['/git-manual/gitbook', '基于 Gitbook 制作 Github pages 上的Markdown电子书']\n    ],\n    // sidebar: 'auto', // 侧边栏配置\n    sidebarDepth: 2 // 侧边栏显示2级\n  }\n};\n")])])]),a("h2",{attrs:{id:"package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json"}},[t._v("#")]),t._v(" package.json")]),t._v(" "),a("p",[t._v("两个命令:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  "scripts": {\n    "docs:start": "vuepress dev docs",\n    "docs:dev": "vuepress dev docs",\n    "docs:build": "vuepress build docs",\n    "docs:deploy": "bash deploy.sh" \n  }\n')])])]),a("h2",{attrs:{id:"开始写作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始写作"}},[t._v("#")]),t._v(" 开始写作")]),t._v(" "),a("p",[a("code",[t._v("$ npm run docs:dev")])]),t._v(" "),a("h2",{attrs:{id:"构建静态文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建静态文件"}},[t._v("#")]),t._v(" 构建静态文件")]),t._v(" "),a("p",[a("code",[t._v("$ npm run docs:build")])]),t._v(" "),a("h2",{attrs:{id:"markdown-语法整理大集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown-语法整理大集合"}},[t._v("#")]),t._v(" Markdown 语法整理大集合")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://www.jianshu.com/p/b03a8d7b1719",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Markdown 语法整理大集合"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"代码块高亮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块高亮"}},[t._v("#")]),t._v(" 代码块高亮")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello world, wecome to ACU.Fund'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h1",{attrs:{id:"首页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#首页"}},[t._v("#")]),t._v(" 首页")]),t._v(" "),a("p",[t._v("默认的主题提供了一个首页（Homepage）的布局 (用于 这个网站的主页)。想要使用它，需要在你的根级 README.md 的 YAML front matter 指定 home: true。以下是一个如何使用的例子：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("---\nhome: true\nheroImage: logo.png\nheroText: ACU Fund 文档库\ntagline: 关于区块链和开源的系列文档\nactionText: git手册 →\nactionLink: git-manual/vuepress.html\nfeatures:\n- title: 区块链\n  details: 区块链区块链区块，链区块链区块链区块链区块链区块，链区块链区块链。\n- title: 开源社区\n  details: 开源开源开源开源开源，开源开源开源开源开源开源，开源。\n- title: 亚链社\n  details: 亚洲区块链爱好者的社区，亚洲区块链爱好者的社区亚洲区块链爱好者的社区，亚洲区块链爱好者的社区。\nfooter: WTFPL Licensed | Copyright © 2020-present ACU.Fund\n--- \n")])])]),a("h1",{attrs:{id:"侧边栏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#侧边栏"}},[t._v("#")]),t._v(" 侧边栏")]),t._v(" "),a("p",[t._v("想要使 "),a("a",{attrs:{href:"https://www.vuepress.cn/theme/default-theme-config.html#%E4%BE%A7%E8%BE%B9%E6%A0%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("侧边栏（Sidebar）"),a("OutboundLink")],1),t._v(" 生效，需要配置 themeConfig.sidebar，基本的配置，需要一个包含了多个链接的数组。")]),t._v(" "),a("h2",{attrs:{id:"自动生成侧栏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动生成侧栏"}},[t._v("#")]),t._v(" 自动生成侧栏")]),t._v(" "),a("p",[t._v("如果希望自动生成一个仅仅包含了当前页面标题（headers）链接的侧边栏，可通过 YAML front matter 来实现(.md文件开头设置)：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("---\nsidebar: auto\n---\n")])])]),a("p",[t._v("禁用："),a("code",[t._v("sidebar: false")])]),t._v(" "),a("h1",{attrs:{id:"上-下一篇链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上-下一篇链接"}},[t._v("#")]),t._v(" 上 / 下一篇链接")]),t._v(" "),a("p",[t._v("上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。可以通过 themeConfig.nextLinks 和 themeConfig.prevLinks 来全局禁用它们：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// .vuepress/config.js\nmodule.exports = {\n  themeConfig: {\n    // 默认值是 true 。设置为 false 来禁用所有页面的 下一篇 链接\n    nextLinks: false,\n    // 默认值是 true 。设置为 false 来禁用所有页面的 上一篇 链接\n    prevLinks: false\n  }\n}\n")])])]),a("h1",{attrs:{id:"支持-pwa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持-pwa"}},[t._v("#")]),t._v(" 支持 PWA")]),t._v(" "),a("p",[t._v("config.js 文件中增加:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("head: [ // 注入到当前页面的 HTML <head> 中的标签\n  ['link', { rel: 'manifest', href: 'logo.png' }],\n  ['link', { rel: 'apple-touch-icon', href: 'logo.png' }],\n],\nserviceWorker: true // 是否开启 PWA\n")])])]),a("p",[t._v("public 文件夹下新建 manifest.json 文件:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "name": "测试三",\n  "short_name": "测试三",\n  "start_url": "index.html",\n  "display": "standalone",\n  "background_color": "#2196f3",\n  "description": "测试三的个人主页",\n  "theme_color": "blue",\n  "icons": [\n    {\n      "src": "./logo.png",\n      "sizes": "144x144",\n      "type": "image/png"\n    }\n  ],\n  "related_applications": [\n    {\n      "platform": "web"\n    },\n    {\n      "platform": "play",\n      "url": "https://play.google.com/store/apps/details?id=acu.fund"\n    }\n  ]\n}\n\n')])])]),a("p",[t._v("最后在 iPhone 的 safrai 浏览器中打开本网站，点击 "),a("code",[t._v("+添加到主屏幕")]),t._v(" 就能在桌面看到一个像原生 App 一样的图标。")]),t._v(" "),a("h1",{attrs:{id:"github-pages-and-travis-ci-部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-pages-and-travis-ci-部署"}},[t._v("#")]),t._v(" Github Pages and Travis CI 部署")]),t._v(" "),a("h2",{attrs:{id:"github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[t._v("#")]),t._v(" GitHub Pages")]),t._v(" "),a("p",[a("code",[t._v("Github Pages")]),t._v(" 是 Github 提供的、用于搭建个人网站的静态站点托管服务。很多人用它搭建个人博客。这种方式的好处是免费、方便，坏处是速度可能会有些慢、不能被国内的搜索引擎收录。")]),t._v(" "),a("p",[t._v("注册登录：https://github.com/")]),t._v(" "),a("p",[t._v("在 docs/.vuepress/config.js 中设置正确的 base:")]),t._v(" "),a("ol",[a("li",[t._v("发布到 https://"),a("USERNAME",[t._v('.github.io/，则可省略这一步，因为 base 默认即是 "/"。')])],1),t._v(" "),a("li",[t._v("发布到 https://"),a("USERNAME",[t._v(".github.io/"),a("REPO",[t._v("/（也就是说仓库在 https://github.com/"),a("USERNAME",[t._v("/"),a("REPO",[t._v('），则将 base 设置为 "/'),a("REPO",[t._v('/"。')])],1)],1)],1)],1)],1)]),t._v(" "),a("p",[t._v("在项目中创建一个如下的 deploy.sh 文件:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpx npm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n# 如果是发布到自定义域名\n# echo 'docs.acu.fund' > CNAME\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果部署到 https://<USERNAME>.github.io , 需要创建 <USERNAME>.github.io 库\n# git push -f git@github.com:swappet/swappet.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>  REPO=github上的项目\ngit push -f git@github.com:swappet/acu.fund-books.git master:gh-pages\n\ncd -\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("可以在持续集成的设置中，设置在每次 push 代码时自动运行上述脚本。")])]),t._v(" "),a("h2",{attrs:{id:"travis-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#travis-ci"}},[t._v("#")]),t._v(" Travis CI")]),t._v(" "),a("p",[t._v("安装： https://github.com/marketplace/travis-ci")]),t._v(" "),a("p",[t._v("创建 GitHub "),a("a",{attrs:{href:"https://github.com/settings/tokens",target:"_blank",rel:"noopener noreferrer"}},[t._v("personal access token"),a("OutboundLink")],1),t._v("，需要授权范围 "),a("code",[t._v("public_repo")]),t._v("(公开库)/"),a("code",[t._v("repo")]),t._v("（私人库）.")]),t._v(" "),a("p",[t._v("在项目的根目录创建一个名为 .travis.yml 的文件；")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("language: node_js\nnode_js:\n  - lts/*\ninstall:\n  - yarn install # npm ci\nscript:\n  - yarn docs:build # npm run docs:build\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  local_dir: docs/.vuepress/dist\n  github_token: $GITHUB_TOKEN # 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable\n  keep_history: true\n  on:\n    branch: master\n")])])]),a("p",[t._v("设置 travis 的环境变量 "),a("code",[t._v("$GITHUB_TOKEN")]),t._v("：\nhttps://docs.travis-ci.com/user/deployment/pages/#setting-the-github-token")]),t._v(" "),a("p",[t._v("也可以加密 "),a("code",[t._v("$GITHUB_TOKEN")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ sudo gem install travis\n$ travis encrypt GITHUB_TOKEN=secret-value-of-github-token\nsecure: ".... encrypted data ...."\n')])])]),a("p",[t._v("把这一行加入.travis.yml:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('env:\n  global:\n    - secure: ".... encrypted data ...."\n')])])]),a("p",[t._v("本里面就可以使用环境变量 $GITHUB_TOKEN 了，Travis 会在运行时自动对它解密。")]),t._v(" "),a("p",[t._v("travis encrypt命令的--add参数会把输出自动写入.travis.yml，省掉了修改env字段的步骤。\n"),a("code",[t._v("$ travis encrypt GITHUB_TOKEN=secret-value-of-github-token --add")])]),t._v(" "),a("h1",{attrs:{id:"多语言支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多语言支持"}},[t._v("#")]),t._v(" 多语言支持")]),t._v(" "),a("p",[t._v("https://www.vuepress.cn/guide/i18n.html#%E7%AB%99%E7%82%B9%E5%A4%9A%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE")]),t._v(" "),a("h1",{attrs:{id:"其他部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他部署"}},[t._v("#")]),t._v(" 其他部署")]),t._v(" "),a("p",[t._v("https://www.vuepress.cn/guide/deploy.html#%E9%83%A8%E7%BD%B2")])])}),[],!1,null,null,null);e.default=n.exports}}]);